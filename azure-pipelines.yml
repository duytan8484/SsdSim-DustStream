jobs:
- job: UNIT_TEST
  condition: eq(variables['JobName'], 'UNIT_TEST')
  strategy:
    maxParallel: 2
    matrix:
      x64_Release:
        ArtifactName: 'x64Release'
        TestExe: $(System.DefaultWorkingDirectory)'/Test.exe'
      x64_Debug:
        ArtifactName: 'x64Debug'
        TestExe: $(System.DefaultWorkingDirectory)'/Test.exe'
  steps:
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: $(ArtifactName)
      targetPath: $(System.DefaultWorkingDirectory)
  - powershell: $(TestExe)

- job: BUILD
  condition: eq(variables['JobName'], 'BUILD')
  strategy:
    maxParallel: 2
    matrix: 
      x64_Release:
        BuildConfiguration: release
        BuildPlatform: x64
        TestExe: './SsdSim/x64/Release/Test.exe'
        ArtifactPath: './SsdSim/x64/Release/'
        ArtifactName: 'x64Release'
      x64_Debug:
        BuildConfiguration: debug
        BuildPlatform: x64
        TestExe: './SsdSim/x64/Debug/Test.exe'
        ArtifactPath: './SsdSim/x64/Debug/'
        ArtifactName: 'x64Debug'
  steps:
  - script: git clone https://github.com/DustParticle/SsdSim.git
  - task: NuGetCommand@2
    inputs:
      command: 'restore'
  - task: VSBuild@1
    displayName: 'Build solution **/*.sln'
    inputs:
      configuration: $(BuildConfiguration)
      platform: $(BuildPlatform)
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: $(ArtifactName)
      targetPath: $(ArtifactPath)

